{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "Jenkins auto scaling group",
    "Parameters": {
        "InstanceType": {
            "Description": "WebServer EC2 instance type",
            "Type": "String",
            "Default": "m1.small",
            "AllowedValues": [
                "m1.small", "m1.medium", "m1.large", "m1.xlarge",
                "c1.medium", "c1.xlarge", "cc2.8xlarge",
                "m2.xlarge", "m2.2xlarge", "m2.4xlarge", "cr1.8xlarge",
                "m4.large", "m4.xlarge", "m4.2xlarge", "m4.4xlarge", "m4.10xlarge", "m3.medium", "m3.large", "m3.xlarge", "m3.2xlarge",
                "c4.large", "c4.xlarge", "c4.2xlarge", "c4.4xlarge", "c4.8xlarge", "c3.large", "c3.xlarge", "c3.2xlarge", "c3.4xlarge", "c3.8xlarge",
                "r3.large", "r3.xlarge", "r3.2xlarge", "r3.4xlarge", "r3.8xlarge",
                "d2.xlarge", "d2.2xlarge", "d2.4xlarge", "d2.8xlarge",
                "g2.2xlarge", "g2.8xlarge"
            ]
        },
        "Price": {
            "Description": "WebServer EC2 instance type",
            "Type": "String",
            "Default": "0.01"
        },
        "BucketDockerConfiguration": {
            "Description": "Bucket that contains the dockerconfig file",
            "Type": "String"
        },
        "KeyPair": {
            "Description": "Keypair to be used",
            "Type": "AWS::EC2::KeyPair::KeyName"
        },
        "Domain": {
            "Description": "The domain to hook your jenkins endpoint to",
            "Type": "String"
        }
    },
    "Resources": {
        "VPC": {
            "Type" : "AWS::EC2::VPC",
            "Properties" : {
                "CidrBlock" : "10.42.10.0/24",
                "EnableDnsSupport" : true,
                "EnableDnsHostnames" : true,
                "InstanceTenancy" : "default",
                "Tags" : [ {"Key": "Name", "Value": "jenkins-vpc"} ]
            }
        },
        "SubnetPublic1a": {
            "Type" : "AWS::EC2::Subnet",
            "Properties" : {
                "AvailabilityZone" : {"Fn::Select": [0, {"Fn::GetAZs": { "Ref" : "AWS::Region" }}]},
                "CidrBlock" : "10.42.10.0/26",
                "MapPublicIpOnLaunch" : true,
                "Tags" : [ {"Key": "Name", "Value": "jenkins-public-1a"} ],
                "VpcId" : { "Ref" : "VPC" }
            }
        },
        "InternetGateway": {
            "Type" : "AWS::EC2::InternetGateway",
            "Properties" : {
                "Tags": [{"Key": "Name", "Value": "internet-gateway-jenkins"}]
            }
        },
        "InterngetGatewayAttach": {
            "Type" : "AWS::EC2::VPCGatewayAttachment",
            "Properties" : {
                "InternetGatewayId" : {"Ref": "InternetGateway"},
                "VpcId" : {"Ref": "VPC"}
            }
        },
        "RouteTablePublic": {
            "Type" : "AWS::EC2::RouteTable",
            "Properties" : {
                "VpcId" : {"Ref": "VPC"},
                "Tags" : [ {"Key": "Name", "Value": "route-table-public"} ]
            }
        },
        "RoutePublic": {
            "Type" : "AWS::EC2::Route",
            "DependsOn": "RouteTablePublic",
            "Properties" : {
                "DestinationCidrBlock" : "0.0.0.0/0",
                "GatewayId" : {"Ref": "InternetGateway"},
                "RouteTableId" : {"Ref": "RouteTablePublic"}

            }
        },
        "RouteSubnet1a": {
            "Type" : "AWS::EC2::SubnetRouteTableAssociation",
            "DependsOn": ["RouteTablePublic", "SubnetPublic1a"],
            "Properties" : {
                "RouteTableId" : {"Ref": "RouteTablePublic"},
                "SubnetId" : {"Ref": "SubnetPublic1a"}
            }
        },
        "ELB": {
            "Type": "AWS::ElasticLoadBalancing::LoadBalancer",
            "Properties": {
                "ConnectionSettings" : {
                    "IdleTimeout" : 240
                },
                "CrossZone" : true,
                "HealthCheck" : {
                    "HealthyThreshold" : "2",
                    "Interval" : "30",
                    "Target" : "HTTP:80/api/json",
                    "Timeout" : "20",
                    "UnhealthyThreshold" : "3"
                },
                "Listeners" : [{
                    "InstancePort" : "8080",
                    "InstanceProtocol" : "HTTP",
                    "LoadBalancerPort" : "80",
                    "Protocol" : "HTTP"
                }],
                "Scheme" : "internet-facing",
                "SecurityGroups" : [ {"Ref": "SecurityGroupHTTPExternal"} ],
                "Subnets" : [
                    {"Ref": "SubnetPublic1a"}
                ]
            }
        },
        "SecurityGroupSSH": {
            "Type" : "AWS::EC2::SecurityGroup",
            "Properties" : {
                "GroupDescription" : "Allow SSH",
                "SecurityGroupIngress" : [
                    {
                        "CidrIp" : "0.0.0.0/0",
                        "FromPort" : "22",
                        "IpProtocol" : "tcp",
                        "ToPort" : "22"
                    }
                ],
                "Tags" :  [ {"Key": "Name", "Value": "jenkins-SSH"} ],
                "VpcId" : {"Ref": "VPC"}
            }
        },
        "SecurityGroupHTTPExternal": {
            "Type" : "AWS::EC2::SecurityGroup",
            "Properties" : {
                "GroupDescription" : "Allow HTTP",
                "SecurityGroupIngress" : [
                    {
                        "CidrIp" : "0.0.0.0/0",
                        "FromPort" : "80",
                        "IpProtocol" : "tcp",
                        "ToPort" : "80"
                    }
                ],
                "Tags" :  [ {"Key": "Name", "Value": "jenkins-HTTP"} ],
                "VpcId" : {"Ref": "VPC"}
            }
        },
        "SecurityGroupHTTPInternal": {
            "Type" : "AWS::EC2::SecurityGroup",
            "Properties" : {
                "GroupDescription" : "Allow HTTP",
                "SecurityGroupIngress" : [
                    {
                        "CidrIp" : "10.42.10.0/24",
                        "FromPort" : "80",
                        "IpProtocol" : "tcp",
                        "ToPort" : "80"
                    }
                ],
                "Tags" :  [ {"Key": "Name", "Value": "jenkins-HTTP-internal"} ],
                "VpcId" : {"Ref": "VPC"}
            }
        },
        "ManagedPolicyAccessBucket": {
            "Type": "AWS::IAM::ManagedPolicy",
            "Properties": {
                "Description" : "Allow to modify the AutoScaling group",
                "PolicyDocument" :
                {
                    "Version":"2012-10-17", 
                    "Statement" : [{
                        "Effect" : "Allow",           
                        "Action" : ["s3:GetObject", "s3:GetObjectVersion"],
                        "Resource" : {"Fn::Join": ["", ["arn:aws:s3:::", {"Ref": "BucketDockerConfiguration"}, "/config.json"]]}
                    }]
                }
            }
        },
        "ManagedPolicyUpdateJenkinsELB": {
            "Type": "AWS::IAM::ManagedPolicy",
            "Properties": {
                "Description" : "Allow to modify the AutoScaling group",
                "PolicyDocument" :
                {
                    "Version":"2012-10-17", 
                    "Statement" : [{
                        "Effect" : "Allow",           
                        "Action" : "elasticloadbalancing:ModifyLoadBalancerAttributes",
                        "Resource" : {"Fn::Join": ["", ["arn:aws:elasticloadbalancing:", {"Ref": "AWS::Region"}, ":*", ":loadbalancer/", {"Ref": "ELB"}]]}
                    }]
                }
            }
        },
        "ManagedPolicyAttachJenkinsVolume": {
            "Type": "AWS::IAM::ManagedPolicy",
            "DependsOn": ["BlockStorage"],

            "Properties": {
                "Description" : "Allow to modify the AutoScaling group",
                "PolicyDocument" :
                {
                    "Version":"2012-10-17", 
                    "Statement" : [{
                        "Effect" : "Allow",           
                        "Action" : "ec2:AttachVolume",
                        "Resource" : [{"Fn::Join": ["", [ "arn:aws:ec2:", {"Ref": "AWS::Region"}, ":*", ":volume/", {"Ref": "BlockStorage"}]]},
                                      {"Fn::Join": ["", [ "arn:aws:ec2:", {"Ref": "AWS::Region"}, ":*", ":instance/*"]]}]
                        
                    }]
                }
            }
        },
        "RoleJenkins": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Version" : "2012-10-17",
                    "Statement": [ {
                        "Effect": "Allow",
                        "Principal": {
                            "Service": [ "ec2.amazonaws.com" ]
                        },
                        "Action": [ "sts:AssumeRole" ]
                    }]
                },
                "ManagedPolicyArns": [ {"Ref": "ManagedPolicyUpdateJenkinsELB"},
                                       {"Ref": "ManagedPolicyAttachJenkinsVolume"},
                                       {"Ref": "ManagedPolicyAccessBucket"}
                                     ]
            }
        },
        "InstanceProfileJenkins": {
            "Type": "AWS::IAM::InstanceProfile",
            "Properties": {
                "Path": "/",
                "Roles": [ {"Ref": "RoleJenkins"} ]
            }
        },
        "BlockStorage": {
            "Type":"AWS::EC2::Volume",
            "Properties" : {
                "AvailabilityZone" : {"Fn::Select": ["0", {"Fn::GetAZs": {"Ref": "AWS::Region"}}]},
                "Encrypted" : false,
                "Size" : "50",
                "Tags" : [ {"Key": "Name", "Value": "jenkins-data" }],
                "VolumeType" : "gp2"
            }
        },
        "RecordSet": {
            "Type" : "AWS::Route53::RecordSet",
            "Properties" : {
                "HostedZoneName" : {"Fn::Join": ["", [{"Ref": "Domain"}, "."]]},
                "Comment" : "Zone apex alias to target jenkins.",
                "Name" : {"Fn::Join": ["", ["jenkins.", {"Ref": "Domain"}, "."]]},
                "Type" : "A",
                "AliasTarget": {
                    "HostedZoneId" : { "Fn::GetAtt" : ["ELB", "CanonicalHostedZoneNameID"] },
                    "DNSName" : { "Fn::GetAtt" : ["ELB", "CanonicalHostedZoneName"] }
                }
            }
        },
        "LaunchConfiguration": {
            "Type" : "AWS::AutoScaling::LaunchConfiguration",
            "Properties" : {
                "EbsOptimized" : false,
                "IamInstanceProfile" : {"Fn::GetAtt" : ["InstanceProfileJenkins", "Arn"] },
                "ImageId" : "ami-257d5552",
                "InstanceType" : {"Ref": "InstanceType"},
                "KeyName" : {"Ref": "KeyPair"},
                "SecurityGroups" : [ {"Ref": "SecurityGroupHTTPExternal"}, {"Ref": "SecurityGroupSSH"} ],
                "SpotPrice" : {"Ref": "Price"},
                "UserData" : { "Fn::Base64" : {"Fn::Join": ["", [
                    "#!/bin/sh\n",
                    "set -x\n",
                    "exec > /var/log/user-data.log\n",
                    "exec 2>&1\n",
                    "apt-get update\n",
                    "apt-get upgrade -y\n",
                    "apt-get install -y git\n",
                    "cd /tmp\n",
                    "git clone https://github.com/kiddouk/jenkins-docker\n",
                    "sh jenkins-docker/init-jenkins.sh ", {"Ref": "AWS::Region"}, " ", {"Ref": "BlockStorage"}, " ", {"Ref": "BucketDockerConfiguration"}, "\n"
                ]]}}
            }
        },
        "AutoScalingGroup": {
            "Type" : "AWS::AutoScaling::AutoScalingGroup",
            "Properties" : {
                "AvailabilityZones" : [ { "Fn::Select": ["0", { "Fn::GetAZs" : {"Ref": "AWS::Region" }}]}],
                "LaunchConfigurationName" : { "Ref" : "LaunchConfiguration" },
                "HealthCheckGracePeriod": "240",
                "MinSize" : "0",
                "Cooldown": "120",
                "MaxSize" : "1",
                "DesiredCapacity": "1",
                "LoadBalancerNames" : [ { "Ref" : "ELB" } ],
                "VPCZoneIdentifier": [ {"Ref": "SubnetPublic1a"}],
                "Tags": [
                    {
                        "PropagateAtLaunch": true,
                        "Value": "Name",
                        "Key": "Jenkins"
                    }
                ]
            }
        }
    }
}



